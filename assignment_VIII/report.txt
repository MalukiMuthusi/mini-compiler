Group 15 Members:
    Maluki Muthusi Maluki       P15/81741/2017
    AMBANI PAULSTERN MADEGWA    P15/1721/2016
    NDUNGU DANIEL GICHURU       P15/133036/2018
    AHMED MOHAMED               P15/102276/2017

We have refactored our compile code and moved from using the lex generator to, 
we have now implemented our own lexical analyzer in Java.

The scanner passes tokens to the parser. The parser is java package on its own. 
The scanner is also a java package. 

We are using recursive descent parsing, predictive parsing.
For each non-terminals in our language we have functions in the parse 
that aid in parsing those non-terminals. This functions mimic the productions of the grammar.

Parsing begins by a call to the top non-terminal PROGRAM, function program.
Function program calls block. The parser maintains a symbol table.
The symbol package has the symbol table. We are using symbol tables with block scope.